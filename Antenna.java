package examples;

import com.sun.awt.AWTUtilities;
import com.sun.glass.events.KeyEvent;
import java.awt.FileDialog;
import java.awt.Window;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


public class Antenna extends javax.swing.JFrame {
    private String encoding = "UTF-8";
	    private String buf = "";
    String PolniiPut = "";// полный путь к файлу
  byte bufa[];
  Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    /** Creates new form Antenna */
    public Antenna() {
        
        initComponents();
        CurrentDate();
    }
    
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        JFileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        lMessage = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextNalogoobl = new javax.swing.JTextField();
        jTextRashodTecPer = new javax.swing.JTextField();
        jTextNalogZaPol = new javax.swing.JTextField();
        jTextAvanPlatPo1 = new javax.swing.JTextField();
        jTextR = new javax.swing.JTextField();
        jTextPD = new javax.swing.JTextField();
        jTextPSN = new javax.swing.JTextField();
        jTextD = new javax.swing.JTextField();
        jTextOZP = new javax.swing.JTextField();
        jTextS = new javax.swing.JTextField();
        jTextCD = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextSZ = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxKolvoMes = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextDV = new javax.swing.JTextField();
        jTextDD = new javax.swing.JTextField();
        jTextOD = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jComboBoxK2BD = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTextNalogNaPribil = new javax.swing.JTextField();
        jTextAvansovPlatPoItogam = new javax.swing.JTextField();
        jTextEzemAvanPlatZa2Kvar = new javax.swing.JTextField();
        jTextPatent = new javax.swing.JTextField();
        jTextECHN = new javax.swing.JTextField();
        jTextECN1 = new javax.swing.JTextField();
        jTextECN2 = new javax.swing.JTextField();
        jTextNDS = new javax.swing.JTextField();
        jTextSn = new javax.swing.JTextField();
        jTextSb = new javax.swing.JTextField();
        jTextNDS1 = new javax.swing.JTextField();
        jTextEN = new javax.swing.JTextField();
        jTextEN1 = new javax.swing.JTextField();
        jTextVD = new javax.swing.JTextField();
        jTextENVD = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        bRaschot = new javax.swing.JButton();
        bCls2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        bAdd = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bAddStroka = new javax.swing.JButton();
        bClsStroka = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        bCls1 = new javax.swing.JButton();
        bCls = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        bClss = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        cut = new javax.swing.JMenuItem();
        copy = new javax.swing.JMenuItem();
        paste = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        select_all = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mniClassic = new javax.swing.JMenuItem();
        mniWindows = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniMotif = new javax.swing.JMenuItem();
        mniNimbus = new javax.swing.JMenuItem();
        date_txt = new javax.swing.JMenu();
        txt_time = new javax.swing.JMenu();

        jFrame1.setTitle("Открыть...");

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 582, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 397, Short.MAX_VALUE)
        );

        jFrame2.setTitle("Решение");

        org.jdesktop.layout.GroupLayout jFrame2Layout = new org.jdesktop.layout.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        JFileChooser.setDialogTitle("");
        JFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Налоговый калькулятор");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Налог на прибыль", "Авансовый платеж по итогам полугодия", "Ежемесячный авансовый платеж за 2 квартал", "ПСН", "ЕСХН", "ЕСН бухгалтерам ком-х пред-тий", "ЕСН индив. пред-лям и гражданам", "НДС", "Сумма НДС", "Сумма без НДС", "Выделения НДС из общей суммы", "УСН по ставке 6%", "УСН по ставке 15%", "Временный доход", "ЕНВД"
            }
        ));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        tblProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProductKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblProduct);

        lMessage.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        lMessage.setForeground(new java.awt.Color(255, 0, 0));
        lMessage.setText(" ");
        lMessage.setToolTipText("");

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ввод данных", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jLabel2.setText("Налогооблагаемые доходы");

        jLabel3.setText("Расходы текущего периода");

        jLabel5.setText("Налог за полугодие");

        jLabel6.setText("Авансовый платеж по итогам 1 квартала");

        jLabel7.setText("Процентная ставка налога");

        jLabel9.setText("Расходы");

        jLabel10.setText("Потенциальный доход");

        jLabel13.setText("Доходы");

        jLabel14.setText("Основная заработная плата сотруднику");

        jLabel11.setText("Дополнительные выплаты");

        jLabel18.setText("Количество месяцев");

        jComboBoxKolvoMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel15.setText("Дополнительный доход");

        jLabel16.setText("Основной доход");

        jLabel17.setText("Сумма");

        jLabel19.setText("Совокупный доход");

        jLabel20.setText("Физический показатель");

        jLabel33.setText("Виды предпринимательской деятедьности");

        jComboBoxK2BD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Оказание бытовых услуг", "Оказание вереринальных услуг", "Оказание услуг по ремонту", "Оказание услуг по хранению автотр-х средств на платных стоянках", "Оказание авто трансп-х услуг по перевозке грузов", "Оказание авто трансп-х услуг по перевозке пассажиров", "Розн. торговля, осущ-я через объекты стац. торговой сети, имеющие торговые залы", "Розн. торговля, осущ-я через объекты стац. торговой сети, не имеющие торговых залов, и розничная торговля, осущ. через объекты нестационарной торговой сети", "Общественное питание", "Разносная (развозная) торговля (за исключением торговли подакцизными товарами, лекарств, препаратами, изделиями из драг. камней, оружием и патронами к нему, меховыми изделиями и технически сложными товарами быт. назначения)", "Распр-е и (или) размещение печатной и (или) полиграфической наружной рекламы ", "Распр-е и (или) размещение посредством световых и электронных табло наружной рекламы ", "Распр-е и (или) разм-е рекламы на автобусах любых типов, трамваях, троллейбусах, легк. и груз. автомобилях, прицепах, полуприцепах и прицепах-роспусках, реч. судах", "Оказание услуг по врем-у размещению и проживанию", "Розничная торговля продовольственными товарами, кроме алкогольной продукции и пива", "Комиссионная торговля непродовольственными товарами", "Розничная торговля молоком и молочной продукцией" }));
        jComboBoxK2BD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxK2BDActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jLabel2)
                            .add(jLabel14)
                            .add(jLabel13)
                            .add(jLabel9)
                            .add(jLabel7)
                            .add(jLabel6)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTextOZP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTextD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTextR, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTextPSN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jTextAvanPlatPo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jTextNalogoobl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextPD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextNalogZaPol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextRashodTecPer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextDV, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextDD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextOD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextCD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jTextSZ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel15)
                            .add(jLabel16)
                            .add(jLabel17)
                            .add(jLabel19)
                            .add(jLabel20)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jLabel18)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jComboBoxKolvoMes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel5)
                            .add(jLabel33)
                            .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 207, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jPanel2Layout.createSequentialGroup()
                .add(jComboBoxK2BD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 340, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jTextD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextR, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jTextPSN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jTextAvanPlatPo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(jTextOZP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jTextPD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jTextNalogZaPol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextNalogoobl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextRashodTecPer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(jTextDV, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(jTextDD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(jTextOD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(jTextS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel19)
                    .add(jTextCD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel20)
                    .add(jTextSZ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel18)
                    .add(jComboBoxKolvoMes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBoxK2BD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel2);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Вывод данных", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jLabel4.setText("Налог на прибыль");

        jLabel8.setText("Авансовый платеж по итогам полугодия");

        jLabel12.setText("Ежемесячный авансовый платеж за 2 квартал");

        jLabel21.setText("ПСН");

        jLabel22.setText("ЕСХН");

        jLabel23.setText("ЕСН бухгалтерам ком-х пред-тий");

        jLabel24.setText("ЕСН индив. пред-лям и гражданам");

        jLabel25.setText("НДС");

        jLabel26.setText("Сумма НДС");

        jLabel27.setText("Сумма без НДС");

        jLabel28.setText("Выделения НДС из общей суммы");

        jLabel29.setText("УСН по ставке 6%");

        jLabel30.setText("УСН по ставке 15%");

        jLabel31.setText("Временный доход");

        jLabel32.setText("ЕНВД");

        jTextENVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextENVDActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jLabel8)
                    .add(jLabel12)
                    .add(jLabel23)
                    .add(jLabel24)
                    .add(jLabel26)
                    .add(jLabel27)
                    .add(jLabel28)
                    .add(jLabel29)
                    .add(jLabel30)
                    .add(jLabel31)
                    .add(jLabel21)
                    .add(jLabel22)
                    .add(jLabel25)
                    .add(jLabel32))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextVD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextEN1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextEN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextNDS1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextSb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextSn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextNDS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextECN2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextECN1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextECHN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextPatent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextEzemAvanPlatZa2Kvar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextAvansovPlatPoItogam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextNalogNaPribil, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextENVD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextNalogNaPribil, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jTextAvansovPlatPoItogam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jTextEzemAvanPlatZa2Kvar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(jTextPatent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel22)
                    .add(jTextECHN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel23)
                    .add(jTextECN1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel24)
                    .add(jTextECN2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel25)
                    .add(jTextNDS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel26)
                    .add(jTextSn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel27)
                    .add(jTextSb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel28)
                    .add(jTextNDS1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel29)
                    .add(jTextEN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel30)
                    .add(jTextEN1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel31)
                    .add(jTextVD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel32)
                    .add(jTextENVD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel1);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Редактор вывода", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        bRaschot.setText("Расчитать");
        bRaschot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRaschotActionPerformed(evt);
            }
        });

        bCls2.setText("Очистить");
        bCls2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCls2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(bRaschot, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(bCls2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(bRaschot)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bCls2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(jPanel3);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Редактор таблицы", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(0, 255, 255))); // NOI18N
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        bAdd.setText("Добавить");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bUpdate.setText("Обновить");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("Удалить");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bAddStroka.setText("Добавить строку");
        bAddStroka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddStrokaActionPerformed(evt);
            }
        });

        bClsStroka.setText("Убрать строку");
        bClsStroka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClsStrokaActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(bDelete)
                    .add(bClsStroka)
                    .add(bAddStroka)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, bAdd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, bUpdate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(bAdd)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bUpdate)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bDelete)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bAddStroka)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bClsStroka)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(jPanel4);

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Редактор ввода", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        bCls1.setText("Очистить");
        bCls1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCls1ActionPerformed(evt);
            }
        });

        bCls.setText("Очистить");
        bCls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(bCls1)
                    .add(bCls))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(bCls1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bCls)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel5);

        jScrollPane8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Редактор текста", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12), new java.awt.Color(0, 255, 0))); // NOI18N
        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        bClss.setText("Очистить");
        bClss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClssActionPerformed(evt);
            }
        });

        jButton2.setText("Решения");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Формулы");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Обозначения");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(bClss)
                    .add(jButton2)
                    .add(jButton1)
                    .add(jButton3))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(bClss)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel6);

        jMenu1.setText("Файл");

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/document.png"))); // NOI18N
        open.setText("Открыть...");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu1.add(open);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/save.png"))); // NOI18N
        save.setText("Сохранить");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jMenu1.add(save);

        SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/save_all_2230t.png"))); // NOI18N
        SaveAs.setText("Сохранить как...");
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(SaveAs);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/exit_6653.png"))); // NOI18N
        exit.setText("Выход");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Правка");

        cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/cut.png"))); // NOI18N
        cut.setText("Вырезать");
        cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutActionPerformed(evt);
            }
        });
        jMenu2.add(cut);

        copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/copy.png"))); // NOI18N
        copy.setText("Копировать");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        jMenu2.add(copy);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/paste.png"))); // NOI18N
        paste.setText("Вставить");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        jMenu2.add(paste);

        delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/Delete.png"))); // NOI18N
        delete.setText("Удалить");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jMenu2.add(delete);

        select_all.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        select_all.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/edit-select-all_7429t.png"))); // NOI18N
        select_all.setText("Выделить все");
        select_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_allActionPerformed(evt);
            }
        });
        jMenu2.add(select_all);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Вычислить");

        jMenuItem9.setText("ЕСН");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem11.setText("Налог");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuItem2.setText("ЕНВД");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("ЕНВД");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("ЕНВД на «вменёнке»");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Налог на имущество");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("НДС");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("НДС");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Налог на прибыль");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem14.setText("Налоговая база");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem14);

        jMenuItem15.setText("ПСН");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem15);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Справка");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/information.png"))); // NOI18N
        jMenuItem10.setText("О прорамме");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/calculator.png"))); // NOI18N
        jMenuItem12.setText("Калькулятор");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem12);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("Ul");

        mniClassic.setText("Classic");
        mniClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClassicActionPerformed(evt);
            }
        });
        jMenu4.add(mniClassic);

        mniWindows.setText("Windows");
        mniWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniWindowsActionPerformed(evt);
            }
        });
        jMenu4.add(mniWindows);
        jMenu4.add(jSeparator1);

        mniMotif.setText("Motif");
        mniMotif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMotifActionPerformed(evt);
            }
        });
        jMenu4.add(mniMotif);

        mniNimbus.setText("Nimbus");
        mniNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNimbusActionPerformed(evt);
            }
        });
        jMenu4.add(mniNimbus);

        jMenuBar1.add(jMenu4);

        date_txt.setText("Date");
        jMenuBar1.add(date_txt);

        txt_time.setText("Time");
        jMenuBar1.add(txt_time);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(31, 31, 31)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane8)
                            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .add(33, 33, 33)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(lMessage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 340, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lMessage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName("Antenna");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        
public void CurrentDate(){
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        date_txt.setText(day+"/"+(month+1)+"/"+year);
        
        int second = cal.get(Calendar.SECOND);
        int minute = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);
        txt_time.setText(hour+":"+(minute)+":"+second);
    }

    /*String  msg   =   ""; 
int mouseX = 0,    mouseY = 0;    // координаты курсора  мыши

// обработать  событие  перемещения  мыши
public  void mouseMoved (MouseEventnt"->Antenna" me ){
// Показать состояние
    showStatus("Moving mouse at " + me.getX() + ", " + me.getY());
} 
    
    public AppWindows(){
    addKeyListener(new MyKeyAdapter(this));
    addMouseListener(new MyMouseAdapter(this));
    addWindowsListener(new MyWindowAdapter());
    }
    appWindow.mouseX = me.getX(); 
appWindow.mouseY = me.getY();
appWindow.mousemsg = "Mouse Down at" + appWindow.mouseX +", " + appWindow.mouseY; 
//   кнопка   мыши    нажата   в   указанной   точке 
appWindow.repaint();
*/
    private void openActionPerformed(java.awt.event.ActionEvent evt) {                                     
	        FileDialog fd = new FileDialog(this, " Открыть...", FileDialog.LOAD);
	        fd.setVisible(true);
	        String path = fd.getDirectory();
	        if (path == null) {
	            return;
	        }
	        path += fd.getFile();
	        StringBuilder sb = new StringBuilder();
	        BufferedReader br = null;
	        try {
	            br = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding));
	            for (int ch = br.read(); ch != -1; ch = br.read()) {
	                sb.append((char) ch);
	            }
	            ta.setText(sb.toString());
	        } catch (Exception e) {
	            e.printStackTrace();
	            return;
	        } finally {
	            if (br != null) {
	                try {
	                    br.close();
	                } catch (Exception e) {
	                    e.printStackTrace();
	                }
	            }
	        }  
    }                                    

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {                                       
FileDialog fd = new FileDialog(this, " Сохранить как...", FileDialog.SAVE);
	        fd.setVisible(true);
	        String path = fd.getDirectory();
	        if (path == null) {
	            return;
	        }
	        path += fd.getFile();
	        byte[] buf;
	        OutputStream os = null;
	        try {
	            buf = ta.getText().getBytes(encoding);
	            os = new FileOutputStream(path);
	            os.write(buf);
	        } catch (Exception e) {
	            e.printStackTrace();
	            return;
	        } finally {
	            if (os != null) {
	                try {
	                    os.close();
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	        }          
    }                                      

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {                                      
ta.replaceRange (buf, ta.getSelectionStart(), ta.getSelectionEnd());
    }                                     

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
    setVisible(false);
    System.exit(0);
    }                                    

    private void JFileChooserActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.ECN().setVisible(true);//новое окно
    /*create.dispose();//закрыть это окно
Win a = new Win();//новое окно
      a.setDefaultCloseOperation(EXIT_ON_CLOSE);
      a.pack();             //размер окна
      a.setVisible(true);   //видимость
      a.setResizable(false);//запрет изменения размеров*/
        // TODO add your handling code here:
    }                                          

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {                                            
    JOptionPane.showMessageDialog(null," Налоговый калькулятор. \n Версия java 8. \n Данный проект был создан в среде NetBeans IDE 8.0.2,\n также тестировался в среде Eclipse LUNA.\n Разработчик: Аденин Роман Вячеславович");   // TODO add your handling code here:
    }                                           

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {                                     
	        FileDialog fd = new FileDialog(this, " Сохранить", FileDialog.SAVE);
	        fd.setVisible(true);
	        String path = fd.getDirectory();
	        if (path == null) {
	            return;
	        }
	        path += fd.getFile();
	        byte[] buf;
	        OutputStream os = null;
	        try {
	            buf = ta.getText().getBytes(encoding);
	            os = new FileOutputStream(path);
	            os.write(buf);
	        } catch (Exception e) {
	            e.printStackTrace();
	            return;
	        } finally {
	            if (os != null) {
	                try {
	                    os.close();
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	        }
    }                                    

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {                                            
    new examples.ContactEditor().setVisible(true);
    }                                           

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {                                            
    new examples.Calculator().setVisible(true);  
    }                                           

    private void cutActionPerformed(java.awt.event.ActionEvent evt) {                                    
        buf = ta.getSelectedText();
			ta.replaceRange ("", ta.getSelectionStart(), ta.getSelectionEnd());
    }                                   

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {                                     
buf = ta.getSelectedText();
    }                                    

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
    ta.replaceRange ("", ta.getSelectionStart(), ta.getSelectionEnd());

    }                                      

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.EHBD().setVisible(true);  
    }                                          

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.EHBD1().setVisible(true); 
    }                                          

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.ENVD().setVisible(true); 
    }                                          

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.NlgCdstrvStoimost().setVisible(true);   
    }                                          

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.NlgDbvlStoimost().setVisible(true); 
    }                                          

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.NlgNaDobavlenSt().setVisible(true);  
    }                                          

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    new examples.NlgNaPribil().setVisible(true); 
    }                                          

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {                                            
    new examples.NlgvBaza().setVisible(true); 
    }                                           

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {                                            
    new examples.PCN().setVisible(true); 
    }                                           

    private void select_allActionPerformed(java.awt.event.ActionEvent evt) {                                           
    ta.selectAll(); 
    }                                          

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {                                     
    lMessage.setText("");
    DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
    if(!jTextNalogNaPribil.getText().trim().equals("")){
        model.addRow(new Object []{jTextNalogNaPribil.getText(), jTextAvansovPlatPoItogam.getText(), jTextEzemAvanPlatZa2Kvar.getText(), jTextPatent.getText(), 
            jTextECHN.getText(), jTextECN1.getText(), jTextECN2.getText(), jTextNDS.getText(), jTextSn.getText(), jTextSb.getText(), jTextNDS1.getText(), 
            jTextEN.getText(), jTextEN1.getText(), jTextVD.getText(), jTextENVD.getText()});
    } else {
        lMessage.setText("Наименование не должно быть пустым");
    }
    }                                    

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {                                        
    DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
    /*tfProName.setText(model.getValueAt(tblProduct.getSelectedRow(), 0).toString());
    cbCategory.setSelectedItem(model.getValueAt(tblProduct.getSelectedRow(), 1).toString());
    tfPrice.setText(model.getValueAt(tblProduct.getSelectedRow(), 2).toString());*/
    
    }                                       

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                        
    lMessage.setText("");
    DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
    if(tblProduct.getSelectedRow()==-1){
        if(tblProduct.getRowCount()==0){
            lMessage.setText("Таблица пуста");
        }else{
            lMessage.setText("Вы должны выбрать табличное значение");
        }       
    }else{
        model.setValueAt(jTextNalogNaPribil.getText(), tblProduct.getSelectedRow(), 0);
        model.setValueAt(jTextAvansovPlatPoItogam.getText(), tblProduct.getSelectedRow(), 1);
        model.setValueAt(jTextEzemAvanPlatZa2Kvar.getText(), tblProduct.getSelectedRow(), 2);
        model.setValueAt(jTextPatent.getText(), tblProduct.getSelectedRow(), 3);
        model.setValueAt(jTextECHN.getText(), tblProduct.getSelectedRow(), 4);
        model.setValueAt(jTextECN1.getText(), tblProduct.getSelectedRow(), 5);
        model.setValueAt(jTextECN2.getText(), tblProduct.getSelectedRow(), 6);
        model.setValueAt(jTextNDS.getText(), tblProduct.getSelectedRow(), 7);
        model.setValueAt(jTextSn.getText(), tblProduct.getSelectedRow(), 8);
        model.setValueAt(jTextSb.getText(), tblProduct.getSelectedRow(), 9);
        model.setValueAt(jTextNDS1.getText(), tblProduct.getSelectedRow(), 10);
        model.setValueAt(jTextEN.getText(), tblProduct.getSelectedRow(), 11);
        model.setValueAt(jTextEN1.getText(), tblProduct.getSelectedRow(), 12);
        model.setValueAt(jTextVD.getText(), tblProduct.getSelectedRow(), 13);
        model.setValueAt(jTextENVD.getText(), tblProduct.getSelectedRow(), 14);
    }
    }                                       

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                        
    DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
    if(tblProduct.getSelectedRow()==-1){
        if(tblProduct.getRowCount()==0){
            lMessage.setText("Таблица пуста");
        }else{
            lMessage.setText("Вы должны выбрать табличное значение");
        }
    }else{
        model.removeRow(tblProduct.getSelectedRow());
    }
    }                                       

    private void bClsStrokaActionPerformed(java.awt.event.ActionEvent evt) {                                           
    DefaultTableModel model = new DefaultTableModel();
    model = (DefaultTableModel) tblProduct.getModel();
model.setRowCount(model.getRowCount()-1);
    }                                          

    private void bAddStrokaActionPerformed(java.awt.event.ActionEvent evt) {                                           
    DefaultTableModel model = new DefaultTableModel();
    model = (DefaultTableModel) tblProduct.getModel();
model.setRowCount(model.getRowCount()+1);
    }                                          
   
    private void bRaschotActionPerformed(java.awt.event.ActionEvent evt) {                                         
if (!"".equals(jTextD)){
				try { 
    int Nalogoobl = Integer.parseInt(jTextNalogoobl.getText());
    int RashodTecPer = Integer.parseInt(jTextRashodTecPer.getText());
    int NalogZaPol = Integer.parseInt(jTextNalogZaPol.getText());
    int AvanPlatPo1 = Integer.parseInt(jTextAvanPlatPo1.getText());
    int PD = Integer.parseInt(jTextPD.getText());
    int D = Integer.parseInt(jTextD.getText());
    int R = Integer.parseInt(jTextR.getText());
    int OZP = Integer.parseInt(jTextOZP.getText());
    int DV = Integer.parseInt(jTextDV.getText());
    int PSN = Integer.parseInt(jTextPSN.getText());
    int OD = Integer.parseInt(jTextOD.getText());
    int DD = Integer.parseInt(jTextDD.getText());
    int S = Integer.parseInt(jTextS.getText());
    int CD = Integer.parseInt(jTextCD.getText());
    int SZ = Integer.parseInt(jTextSZ.getText());
    double NalogNaPribil, AvansovPlatPoItogam, EzemAvanPlatZa2Kvar, Patent, ECHN, ECN1, ECN2, NDS, Sn, Sb, NDS1, EN, EN1, VD, ENVD;
    double K1 = 1.798;
    int KolvoMes = jComboBoxKolvoMes.getSelectedIndex();
    if (jComboBoxKolvoMes.getSelectedIndex() == 0) {
        KolvoMes = 1;     
    }
    else if (jComboBoxKolvoMes.getSelectedIndex() == 1) {
        KolvoMes = 2;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 2) {
        KolvoMes = 3;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 3) {
        KolvoMes = 4;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 4) {
        KolvoMes = 5;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 5) {
        KolvoMes = 6;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 6) {
        KolvoMes = 7;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 7) {
        KolvoMes = 8;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 8) {
        KolvoMes = 9;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 9) {
        KolvoMes = 10;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 10) {
        KolvoMes = 11;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 11) {
        KolvoMes = 12;
    }else
            {
                jComboBoxKolvoMes.setToolTipText("Процесс не выбран");
            }
    double K2 = jComboBoxK2BD.getSelectedIndex();
    int BD = jComboBoxK2BD.getSelectedIndex();
    if (jComboBoxK2BD.getSelectedIndex() == 0) {
        K2 = 0.85;    
        BD = 7500;
    }
    else if (jComboBoxK2BD.getSelectedIndex() == 1) {
        K2 = 1;    
        BD = 7500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 2) {
        K2 = 1;     
        BD = 12000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 3) {
        K2 = 1;     
        BD = 50;
    }else if (jComboBoxK2BD.getSelectedIndex() == 4) {
        K2 = 1;     
        BD = 6000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 5) {
        K2 = 0.9;     
        BD = 1500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 6) {
        K2 =  1;    
        BD = 1800;
    }else if (jComboBoxK2BD.getSelectedIndex() == 7) {
        K2 = 1;     
        BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 8) {
        K2 = 0.9;     
        BD = 1000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 9) {
        K2 = 1;    BD = 4500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 10) {
        K2 = 1;     BD = 3000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 11) {
        K2 =  1;    BD = 4000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 12) {
        K2 = 1;    BD = 10000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 13) {
        K2 = 1;     BD = 1000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 14) {
        K2 = 0.9;    BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 15) {
        K2 = 0.9;     BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 16) {
        K2 = 0.8;    BD = 9000;
    }else
            {
                jComboBoxKolvoMes.setToolTipText("Процесс не выбран");
            }
    NalogNaPribil=((Nalogoobl-RashodTecPer)*20)/100;
    AvansovPlatPoItogam=NalogZaPol-AvanPlatPo1;
    EzemAvanPlatZa2Kvar=AvanPlatPo1/3;
//Patent(Патент) = PD * 6% / 12 * KolvoMes(количество месяцев)
    Patent=PD/12*KolvoMes*0.06;
    ECHN=D-R*0.06;
    ECN1 = ((OZP + DV) * PSN) / 100;
    ECN2=(((OD+DD)-R)*PSN)/100;
    NDS=(S*18)/100;
//NDS (НДС) =  S (сумма) * 18%
//Sn = (S + S * 18) /100; 
    Sn=S*1.18;
//Sb (сумма без НДС) = Sn / (1+ N)      N=18/100
    Sb=Sn/1.18;
    NDS1=Sn-Sn/1.18; //= Sn * (1 – 1 / 1.18)
//УСН  6%
    EN=CD*0.06;
//УСН  15%
    EN1=((CD-R)*15)/100;
//K1 = 1,798      K2 = *****     BD = *****     
    VD=BD*SZ;
    ENVD=VD*K1*K2*0.15;
    jTextNalogNaPribil.setText(String.valueOf(NalogNaPribil + " руб."));
    jTextAvansovPlatPoItogam.setText(String.valueOf(AvansovPlatPoItogam + " руб."));
    jTextEzemAvanPlatZa2Kvar.setText(String.valueOf(EzemAvanPlatZa2Kvar + " руб."));
    jTextPatent.setText(String.valueOf(Patent + " руб."));
    jTextECHN.setText(String.valueOf(ECHN + " руб."));
    jTextECN1.setText(String.valueOf(ECN1 + " руб."));
    jTextECN2.setText(String.valueOf(ECN2 + " руб."));
    jTextNDS.setText(String.valueOf(NDS + " руб."));
    jTextSn.setText(String.valueOf(Sn + " руб."));
    jTextSb.setText(String.valueOf(Sb + " руб."));
    jTextNDS1.setText(String.valueOf(NDS1 + " руб."));
    jTextEN.setText(String.valueOf(EN + " руб."));
    jTextEN1.setText(String.valueOf(EN1 + " руб."));
    jTextVD.setText(String.valueOf(VD + " руб."));
    jTextENVD.setText(String.valueOf(ENVD + " руб."));
    } catch (NumberFormatException e1) {
					// TODO Auto-generated catch block
					javax.swing.JOptionPane.showConfirmDialog(null,
					"Пожалуйста, введите число", "Неправильный ввод",
					javax.swing.JOptionPane.PLAIN_MESSAGE);
					return;
				}
			}
    }                                        

    private void bCls1ActionPerformed(java.awt.event.ActionEvent evt) {                                      
    jTextNalogoobl.setText(null);
    jTextRashodTecPer.setText(null);
    jTextNalogZaPol.setText(null);   
    jTextAvanPlatPo1.setText(null);
    jTextPD.setText(null);
    jTextD.setText(null);
    jTextR.setText(null);
    jTextOZP.setText(null);
    jTextDV.setText(null);
    jTextPSN.setText(null);   
    jTextOD.setText(null);
    jTextDD.setText(null);
    jTextS.setText(null);
    jTextCD.setText(null);
    jTextSZ.setText(null);
    }                                     

    private void bCls2ActionPerformed(java.awt.event.ActionEvent evt) {                                      
    jTextNalogNaPribil.setText(null);
    jTextAvansovPlatPoItogam.setText(null);
    jTextEzemAvanPlatZa2Kvar.setText(null); 
    jTextPatent.setText(null);
    jTextECHN.setText(null);
    jTextECN1.setText(null);
    jTextECN2.setText(null);
    jTextNDS.setText(null);
    jTextSn.setText(null);
    jTextSb.setText(null);
    jTextNDS1.setText(null);
    jTextEN.setText(null);   
    jTextEN1.setText(null);
    jTextVD.setText(null);
    jTextENVD.setText(null);
    }                                     

    private void jComboBoxK2BDActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    //ta.setText(jTextD.getText());
    ta.setText("Налог на прибыль = (Налогооблагаемые доходы – Расходы текущего периода) * 20%\n" +
"Авансовый платеж = Налог за полугодие – Авансовый платеж по итогам 1 квартала\n" +
"Ежемесячный авансовый платеж за 2 квартал = Авансовый платеж по итогам 1 квартала : 3\n" +
"Патент = ПД * 6% / 12 * количество месяцев\n" +
"ЕСХН = Доходы – Расходы * 6%\n" +
"ЕСН бухгалтерам = (ОЗП + ДВ) * ПСН\n" +
"ЕСН гражданам = ((ОД + ДД) – расходы) * ПСН\n" +
"НДС = сумма * 18%\n" +
"сумма с НДС = Сумма + Сумма * 18 /100 \n" +
"сумма с НДС = Сумма * 1,18\n" +
"сумма без НДС = сумма с НДС / (1+ N);      N=18/100\n" +
"сумма без НДС = сумма с НДС / 1.18\n" +
"НДС выделения = сумма с НДС – сумма с НДС / 1.18 = сумма с НДС * (1 – 1 / 1.18)\n" +
"УСН  6%\n" +
"ЕН = СД * 6%\n" +
"УСН  15%\n" +
"ЕН = (СД – Р) * 15%\n" +
"K1 = 1,798      K2 = *****     BD = *****     \n" +
"ВД = БД * ФП\n" +
"ЕНВД = ВД * K1 * K2 * 15%");
    }                                        

    private void bClssActionPerformed(java.awt.event.ActionEvent evt) {                                      
    ta.setText("");
    }                                     

    private void tblProductKeyPressed(java.awt.event.KeyEvent evt) {                                      
    if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
        
    }
    }                                     

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
if (!"".equals(jTextD)){
				try { 
    int Nalogoobl = Integer.parseInt(jTextNalogoobl.getText());
    int RashodTecPer = Integer.parseInt(jTextRashodTecPer.getText());
    int NalogZaPol = Integer.parseInt(jTextNalogZaPol.getText());
    int AvanPlatPo1 = Integer.parseInt(jTextAvanPlatPo1.getText());
    int PD = Integer.parseInt(jTextPD.getText());
    int D = Integer.parseInt(jTextD.getText());
    int R = Integer.parseInt(jTextR.getText());
    int OZP = Integer.parseInt(jTextOZP.getText());
    int DV = Integer.parseInt(jTextDV.getText());
    int PSN = Integer.parseInt(jTextPSN.getText());
    int OD = Integer.parseInt(jTextOD.getText());
    int DD = Integer.parseInt(jTextDD.getText());
    int S = Integer.parseInt(jTextS.getText());
    int CD = Integer.parseInt(jTextCD.getText());
    int SZ = Integer.parseInt(jTextSZ.getText());
    double NalogNaPribil, AvansovPlatPoItogam, EzemAvanPlatZa2Kvar, Patent, ECHN, ECN1, ECN2, NDS, Sn, Sb, NDS1, EN, EN1, VD, ENVD;
    double K1 = 1.798;
    int KolvoMes = jComboBoxKolvoMes.getSelectedIndex();
    if (jComboBoxKolvoMes.getSelectedIndex() == 0) {
        KolvoMes = 1;     
    }
    else if (jComboBoxKolvoMes.getSelectedIndex() == 1) {
        KolvoMes = 2;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 2) {
        KolvoMes = 3;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 3) {
        KolvoMes = 4;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 4) {
        KolvoMes = 5;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 5) {
        KolvoMes = 6;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 6) {
        KolvoMes = 7;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 7) {
        KolvoMes = 8;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 8) {
        KolvoMes = 9;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 9) {
        KolvoMes = 10;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 10) {
        KolvoMes = 11;
    }else if (jComboBoxKolvoMes.getSelectedIndex() == 11) {
        KolvoMes = 12;
    }else
            {
                jComboBoxKolvoMes.setToolTipText("Процесс не выбран");
            }
    double K2 = jComboBoxK2BD.getSelectedIndex();;
    int BD = jComboBoxK2BD.getSelectedIndex();;
    if (jComboBoxK2BD.getSelectedIndex() == 0) {
        K2 = 0.85;    
        BD = 7500;
    }
    else if (jComboBoxK2BD.getSelectedIndex() == 1) {
        K2 = 1;    
        BD = 7500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 2) {
        K2 = 1;     
        BD = 12000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 3) {
        K2 = 1;     
        BD = 50;
    }else if (jComboBoxK2BD.getSelectedIndex() == 4) {
        K2 = 1;     
        BD = 6000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 5) {
        K2 = 0.9;     
        BD = 1500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 6) {
        K2 =  1;    
        BD = 1800;
    }else if (jComboBoxK2BD.getSelectedIndex() == 7) {
        K2 = 1;     
        BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 8) {
        K2 = 0.9;     
        BD = 1000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 9) {
        K2 = 1;    BD = 4500;
    }else if (jComboBoxK2BD.getSelectedIndex() == 10) {
        K2 = 1;     BD = 3000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 11) {
        K2 =  1;    BD = 4000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 12) {
        K2 = 1;    BD = 10000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 13) {
        K2 = 1;     BD = 1000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 14) {
        K2 = 0.9;    BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 15) {
        K2 = 0.9;     BD = 9000;
    }else if (jComboBoxK2BD.getSelectedIndex() == 16) {
        K2 = 0.8;    BD = 9000;
    }else
            {
                jComboBoxKolvoMes.setToolTipText("Процесс не выбран");
            }
    NalogNaPribil=((Nalogoobl-RashodTecPer)*20)/100;
    AvansovPlatPoItogam=NalogZaPol-AvanPlatPo1;
    EzemAvanPlatZa2Kvar=AvanPlatPo1/3;
//Patent(Патент) = PD * 6% / 12 * KolvoMes(количество месяцев)
    Patent=PD/12*KolvoMes*0.06;
    ECHN=D-R*0.06;
    ECN1 = ((OZP + DV) * PSN) / 100;
    ECN2=(((OD+DD)-R)*PSN)/100;
    NDS=(S*18)/100;
//NDS (НДС) =  S (сумма) * 18%
//Sn = (S + S * 18) /100; 
    Sn=S*1.18;
//Sb (сумма без НДС) = Sn / (1+ N)      N=18/100
    Sb=Sn/1.18;
    NDS1=Sn-Sn/1.18; //= Sn * (1 – 1 / 1.18)
//УСН  6%
    EN=CD*0.06;
//УСН  15%
    EN1=((CD-R)*15)/100;
//K1 = 1,798      K2 = *****     BD = *****     
    VD=BD*SZ;
    ENVD=VD*K1*K2*0.15;
    ta.setText(String.valueOf("Налог на прибыль = ("+Nalogoobl+" – "+RashodTecPer+") * 20% = " 
            + NalogNaPribil + " руб\n" +
"Авансовый платеж = "+NalogZaPol+" – "+AvanPlatPo1+" = " +AvansovPlatPoItogam + " руб\n" +
"Ежемесячный авансовый платеж за 2 квартал = "+AvanPlatPo1+" : 3 = " +EzemAvanPlatZa2Kvar + " руб\n" +
"Патент = "+PD+" * 6% / 12 * "+KolvoMes+" = " +Patent + " руб\n" +
"ЕСХН = "+D+" – "+R+" * 6% = " +ECHN + " руб\n" +
"ЕСН бухгалтерам = ("+OZP+" + "+DV+") * "+PSN+" = " + ECN1 + " руб\n" +
"ЕСН гражданам = (("+OD+" + "+DD+") – "+R+") * "+PSN+" = " + ECN2 + " руб\n" +
"НДС = "+S+" * 18% = " + NDS + " руб\n" +
"сумма с НДС = "+S+" + "+S+" * 18 /100 = " + Sn + " руб\n" +
"сумма с НДС = "+S+" * 1,18 = " + Sn + " руб\n" +
"сумма без НДС = "+Sn+" / (1+ N);      N=18/100\n" +
"сумма без НДС = "+Sn+" / 1.18 = " + Sb + " руб\n" +
"НДС выделения = "+Sn+" – "+Sn+" / 1.18 = "+Sn+" * (1 – 1 / 1.18) = " + NDS1 + " руб\n" +
"УСН  6%\n" +
"ЕН = "+CD+" * 6% = " + EN + " руб\n" +
"УСН  15%\n" +
"ЕН = ("+CD+" – "+R+") * 15% = " + EN1 + " руб\n" +
"K1 = 1,798      K2 = *****     BD = *****     \n" +
"ВД = "+BD+" * "+SZ+" = " + VD + " руб\n" +
"ЕНВД = "+VD+" * "+K1+" * "+K2+" * 15% = " + ENVD + " руб\n" ));
    } catch (NumberFormatException e1) {
					// TODO Auto-generated catch block
					javax.swing.JOptionPane.showConfirmDialog(null,
					"Пожалуйста, введите число", "Неправильный ввод",
					javax.swing.JOptionPane.PLAIN_MESSAGE);
					return;
				}
			}
    }                                        

    private void jTextENVDActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    ta.setText(
    "ПСН - патентная система налогооблажения\n"+
"ПД - потенциальный доход\n"+
"ЕСХН - единый сельскохозяйственный налог\n"+
"ЕСН - единый социальный налог, подлежащий уплате\n"+
"ОЗП - основная заработная плата сотруднику\n"+
"ДВ - дополнительные выплаты\n"+
"ПСН - процентная ставка налога\n"+
"ОД - основной доход, полученный в отчётном периоде\n"+
"ДД - дополнительный доход\n"+
"Р - расходы понесённые в отчётном периоде и подтверждённые документально\n"+
"НДС - налог на добавленную стоимость\n"+
"ЕН - единый налог\n"+
"СД - совокупный доход\n"+
"НС - налоговая ставка\n"+
"ВД - временный доход\n"+
"БД - базовая доходность\n"+
"ФП - физический показатель\n"+
"ЕНВД - единый налог на временный доход\n"+
"УСН - упрощенная система налогооблажения\n"+
"ОСНО - общая система налогооблажения\n"+
"НБ - налоговая база"
    );
    }                                        

    private void bClsActionPerformed(java.awt.event.ActionEvent evt) {                                     
    jTextNalogoobl.setText(null);
    jTextRashodTecPer.setText(null);
    jTextNalogZaPol.setText(null);   
    jTextAvanPlatPo1.setText(null);
    jTextPD.setText(null);
    jTextD.setText(null);
    jTextR.setText(null);
    jTextOZP.setText(null);
    jTextDV.setText(null);
    jTextPSN.setText(null);   
    jTextOD.setText(null);
    jTextDD.setText(null);
    jTextS.setText(null);
    jTextCD.setText(null);
    jTextSZ.setText(null);
    jTextNalogNaPribil.setText(null);
    jTextAvansovPlatPoItogam.setText(null);
    jTextEzemAvanPlatZa2Kvar.setText(null); 
    jTextPatent.setText(null);
    jTextECHN.setText(null);
    jTextECN1.setText(null);
    jTextECN2.setText(null);
    jTextNDS.setText(null);
    jTextSn.setText(null);
    jTextSb.setText(null);
    jTextNDS1.setText(null);
    jTextEN.setText(null);   
    jTextEN1.setText(null);
    jTextVD.setText(null);
    jTextENVD.setText(null);
    }                                    

    private void mniNimbusActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                         

    private void mniMotifActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void mniWindowsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                          

    private void mniClassicActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Antenna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                          
    double Sn = 0;
    protected DefaultListModel listModel;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Antenna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Antenna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Antenna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Antenna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Antenna().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JFileChooser JFileChooser;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bAddStroka;
    private javax.swing.JButton bCls;
    private javax.swing.JButton bCls1;
    private javax.swing.JButton bCls2;
    private javax.swing.JButton bClsStroka;
    private javax.swing.JButton bClss;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bRaschot;
    private javax.swing.JButton bUpdate;
    private javax.swing.JMenuItem copy;
    private javax.swing.JMenuItem cut;
    private javax.swing.JMenu date_txt;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBoxK2BD;
    private javax.swing.JComboBox jComboBoxKolvoMes;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextAvanPlatPo1;
    private javax.swing.JTextField jTextAvansovPlatPoItogam;
    private javax.swing.JTextField jTextCD;
    private javax.swing.JTextField jTextD;
    private javax.swing.JTextField jTextDD;
    private javax.swing.JTextField jTextDV;
    private javax.swing.JTextField jTextECHN;
    private javax.swing.JTextField jTextECN1;
    private javax.swing.JTextField jTextECN2;
    private javax.swing.JTextField jTextEN;
    private javax.swing.JTextField jTextEN1;
    private javax.swing.JTextField jTextENVD;
    private javax.swing.JTextField jTextEzemAvanPlatZa2Kvar;
    private javax.swing.JTextField jTextNDS;
    private javax.swing.JTextField jTextNDS1;
    private javax.swing.JTextField jTextNalogNaPribil;
    private javax.swing.JTextField jTextNalogZaPol;
    private javax.swing.JTextField jTextNalogoobl;
    private javax.swing.JTextField jTextOD;
    private javax.swing.JTextField jTextOZP;
    private javax.swing.JTextField jTextPD;
    private javax.swing.JTextField jTextPSN;
    private javax.swing.JTextField jTextPatent;
    private javax.swing.JTextField jTextR;
    private javax.swing.JTextField jTextRashodTecPer;
    private javax.swing.JTextField jTextS;
    private javax.swing.JTextField jTextSZ;
    private javax.swing.JTextField jTextSb;
    private javax.swing.JTextField jTextSn;
    private javax.swing.JTextField jTextVD;
    private javax.swing.JLabel lMessage;
    private javax.swing.JMenuItem mniClassic;
    private javax.swing.JMenuItem mniMotif;
    private javax.swing.JMenuItem mniNimbus;
    private javax.swing.JMenuItem mniWindows;
    private javax.swing.JMenuItem open;
    private javax.swing.JMenuItem paste;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem select_all;
    private javax.swing.JTextArea ta;
    private javax.swing.JTable tblProduct;
    private javax.swing.JMenu txt_time;
    // End of variables declaration                   

    protected JTextComponent createTextComponent() {
    JTextArea ta = new JTextArea();
    ta.setLineWrap(true);
    ta.setText("");
    String encoding = "UTF-8";
    String buf = "";
    String PolniiPut = "";// полный путь к файлу
    byte bufa[];
    return ta;
  }

    
    }

